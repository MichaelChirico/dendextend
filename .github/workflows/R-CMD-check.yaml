on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: windows-latest, r: '4.1'} # Ensuring compatibility with Hmisc
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}
          - {os: ubuntu-latest,   r: 'oldrel-2'}
          # Removed older versions to avoid compatibility issues

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      # Check if R version is compatible with Hmisc requirements
      - name: Install Hmisc
        if: matrix.config.r >= '4.1'
        run: Rscript -e 'install.packages("Hmisc")'

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      # This step is to ensure the installation of Hmisc does not fail the workflow
      - name: Check for Hmisc installation
        run: Rscript -e 'if (!("Hmisc" %in% installed.packages()[,"Package"])) { quit(save = "no", status = 1) }'

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
